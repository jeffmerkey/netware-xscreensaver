

NOVELL NETWARE SMP CONSOLE SCREENSAVER FOR X11, GNOME, AND KDE DESKTOPS


Table of Contents 

-   Description
-   Quick Start Guide
-   Building the Screensaver from Source
-   Building the Screensaver as an RPM Package (Redhat/CentOS/SuSe)
-   NetwareSMP Options
-   Copyright
-   Authors
-   Issues / Problems / Help


Description

The _netwaresmp_ screensaver written by Jeffrey Merkey
<jeffmerkey@gmail.com> and Cosimo Streppone <cosimo@cpan.org>, based on
PopSquares, Deco hacks, loadsnake, and Novell’s Netware SMP. The
original Netware SMP screensaver was written by Jeffrey Merkey at Novell
in 1994. This version is a rewrite of the original which functions
exactly the same way as it did in Netware SMP. Each worm represents a
running system cpu processor. As system utilization increases for each
cpu, the corresponding worm for that processor gets longer and moves
more quicky across the screen. As overall system load increases, all the
worms slightly increase in speed. This screensaver is very useful for
monitoring cpu loading in a system since you can visually see processor
utilization and loading by simply observing the worms.


Quick Start Guide

You can download precompiled RPM packages which contain the entire
XScreensaver program with netwaresmp integrated from the release page
for this project, or you can build the program from the git sources. The
current netwaresmp xscreensaver module is compiled against the
XScreensaver v6.08 base and you may have to deinstall any older version
of the Xscreensaver program you are running and reinstall with this RPM.

If you want to build the program from scratch with the git sources
rather than use the pre-compiled RPMS packages, then please skip to the
section Building the Screensaver from Source for instructions on how to
do this.

Packages are provided in binary and source versions, and can be
downloaded and installed directly or rebuilt for a different target
architecture such as ARM64. Package types are Red Hat Package Manager
(RPM) packages for binary installation and Source RPM packages (SRPMS)
for source code installation.

RPM packages for each release include a binary architecture specific
package and a source package which can be downloaded and built/rebuilt
and which contains the source code.

For example, the release v6.08-3 contains the following packages in the
release section:

RPM BASED PACKAGES (REDHAT, CENTOS, SUSE)

-   xscreensaver-netwaresmp-6.08-3.src.rpm
-   xscreensaver-netwaresmp-6.08-3.x86_64.rpm

REMOVING A PREVIOUS INSTALLATION OF OUTDATED VERSIONS OF XSCREENSAVER

Most of the XScreensaver packages shipped or distributed by RedHat,
Debian, and many Distros of Linux are quite old and outdated and do not
contain current bug fixes or support and should be upgraded in any
event.

To remove a previously installed or outdated version of XScreensaver
with the rpm package manager for x86_64:

    rpm -e xscreensaver

INSTALLING BINARY PACKAGES

To install the binary package with the rpm package manager for x86_64:

    rpm -i xscreensaver-netwaresmp-6.08-3.x86_64.rpm

To deinstall the RPM binary package:

    rpm -e xscreensaver-netwaresmp

INSTALLING SOURCE PACKAGES

To install the source package with the rpm package manager:

    rpm -i xscreensaver-netwaresmp-6.08-3.src.rpm

_(Note: rpm installs the source code files in /root/rpmbuild/ as top
directory for RedHat and CentOS platforms. SuSe platforms install the
source code files in /usr/src/packages/)_

For building or rebuilding RPMS or DEB Packages after you have installed
the associated source packages on your platform, refer to the following:

-   Building the Screensaver as an RPM Package (Redhat/CentOS/SuSe)


_NETWARESMP_ OPTIONS

    netwaresmp [-cpus  number of cpus] [-speedup  divisor] [-wormsize  pixels] 
    [-display host:display.screen] [-foreground color] [-background color] 
    [-window] [-root] [-mono] [-install] [-visual visual] [-delay seconds] 
    [-max-depth int] [-min-width int] [-min-height int] [-cycle] [-no-cycle] 
    [-cycle-delay]


COMMAND LINE OPTIONS

_netwaresmp_ accepts the following options:

-   -CPUS
    Number of cpus to start. The default is the actual number of cpus
    detected from /proc/cpuinfo. If you specify more cpus than are
    installed in your system, only the worms that are mapped to an
    actual processor will grow longer and faster when cpu load increases
    for that processor. If you specify less cpus than are installed in
    your system, the program will default the display to the actual
    detected cpus.
-   -SPEEDUP
    speedup divisor to increase worm speed. functions as powers of 2
    i.e. speedup=4 runs at 4 times the speed, etc. Default value is 1.
-   -WORMSIZE
    size of the worm head in pixels in a range between 10 and 80.
    Default value is 20. Can be any value but works best if you use
    multiples of 2 to map to graphics screen dimensions (which are
    typically numbers which are multiples of 2 or 10).
-   -WINDOW
    Draw on a newly-created window. This is the default.
-   -ROOT
    Draw on the root window.
-   -MONO
    If on a color display, pretend we’re on a monochrome display.
-   -INSTALL
    Install a private colormap for the window.
-   -VISUAL _VISUAL_
    Specify which visual to use. Legal values are the name of a visual
    class, or the id number (decimal or hex) of a specific visual.
-   -DELAY _SECONDS_
    How long to wait before starting over. Default 5 seconds.
-   -MAX-DEPTH _INTEGER_
    How deep to subdivide. Default 12.
-   -MIN-WIDTH _INTEGER_
    -MIN-HEIGHT _INTEGER_ The size of the smallest rectangle to draw.
    Default 20x20.
-   -CYCLE
-   -NO-CYCLE
    Whether to do color cycling. Default False.
-   -CYCLE-DELAY _USECS_
    If color cycling, how often to change the colors. Default 1000000,
    or 1 second.


ENVIRONMENT

-   DISPLAY
    to get the default host and display number.
-   XENVIRONMENT
    to get the name of a resource file that overrides the global
    resources stored in the RESOURCE_MANAGER property.


BUILDING THE SCREENSAVER FROM SOURCE


BUILDING AS AN RPM PACKAGE

In order to build the screensaver as an RPM, the program must be
compressed into a tar.gz file and the tar.gz file named to match the
versioning information contained in the associated .spec file.

Spec files are special files which contain instructions on how to build
a particular package from a source code archive. On Red Hat and CentOS
systems, RPMS are built in the /root/rpmbuild/ top directory. SuSe
systems build RPMS in the /usr/src/packages/ as top directory. These
“top directories” will contain BUILD, BUILDROOT, SPECS, RPMS, SRPMS, and
SOURCES subdirectories.

The SPECS directory contains the *.spec files used to build RPMS and
SRPMS packages. The SOURCES subdirectory will contain the soure code
archive file referred to in the *.spec file used to build the RPM
package.

See the Quick Start Guide on instructions for installing the source rpm
which installs both the .spec file and source archive file (tar.gz) into
the rpm build top directory (i.e. /root/rpmbuild/). You should have
previously installed the src.rpm file before attempting to build the
rpm. You can also manually install the .spec file into the <top
directory>/SPECS/ directory and the source code tarball in the <top
directory/SOURCES/ directory, then attempt to build the rpm package.

To build the Screensaver using the rpm tool, change directories (cd)
into the /root/rpmbuild/SPECS/ directory (/usr/src/packages/SPECS/ for
SuSe) and enter the following command:

    rpmbuild -ba xscreensaver-6.8.spec <enter>


COPYRIGHT

Copyright © 1994-2024 by Jamie Zawinski, Jeffrey Merkey, Cosimo
Streppone, and others. Permission to use, copy, modify, distribute, and
sell this software and its documentation for any purpose is hereby
granted without fee, provided that the above copyright notice appear in
all copies and that both that copyright notice and this permission
notice appear in supporting documentation. No representations are made
about the suitability of this software for any purpose. It is provided
“as is” without express or implied warranty.


AUTHORS

Jeffrey Merkey <jeffmerkey@gmail.com> and Cosimo Streppone
<cosimo@cpan.org>, based on PopSquares, Deco hacks, loadsnake, and
Novell’s Netware SMP. The original Netware SMP screensaver was written
by Jeffrey Merkey at Novell in 1994.


ISSUES / PROBLEMS / HELP

If you have any issues, please log them at
https://github.com/jeffmerkey/netware-screensaver-linux/issues

If you have any suggestions for improvements then pull requests are
welcomed, or raise an issue. ```
